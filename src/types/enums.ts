export enum Visibility {
    PUBLIC = 'public',
    PRIVATE = 'private'
}

/**
 * Token Types in case more tokens required in the future
 * - Example: `401:CREDENTIALS` → Show a login form.  
 */
export enum TokenTypes {
    PASSWORD_RESET = 'reset-password'
}

/**
 * Error codes follow the format: `TYPE:SHORT_KEY`  
 * - Used by frontend to handle errors consistently.  
 * - Example: `401:CREDENTIALS` → Show a login form.  
 */
export enum ErrorCode {
    // Default codes shouldnt happen, if do, need to handle on BE (log and notify admin)
    BAD_REQUEST_DEFAULT = "DEFAULT:BAD_REQUEST",
    UNAUTH_DEFAULT = "DEFAULT:UNAUTH",
    FORBID_DEFAULT = "DEFAULT:FORBID",
    NOT_FOUND_DEFAULT = "DEFAULT:NOT_FOUND",
    CONFLICT_DEFAULT = "DEFAULT:CONFLICT",
    SERVER_DEFAULT = "DEFAULT:SERVER",
    LOG_ONLY_DEFAULT = "DEFAULT:LOG_ONLY",
    UNKNONWN_DEFAULT = "DEFAULT:UNKNOWN",
    
    // Validation
    FILE_TYPE_INVALID = "VALIDATION:FILE_TYPE_INVALID",
    ZOD_VALIDATION_FAILED = "VALIDATION:ZOD_VALIDATION_FAILED",
    FILE_TOO_LARGE = "VALIDATION:FILE_TOO_LARGE",
    FILE_MISSING = "VALIDATION:FILE_MISSING",
    EMAIL_IN_USE = "VALIDATION:EMAIL_IN_USE",
    PW_RECENTLY_USED = "VALIDATION:PW_RECENTLY_USED",
    ID_PARAM_MISSING = "VALIDATION:ID_PARAM_MISSING",
    ID_PARAM_MISMATCH = "VALIDATION:ID_PARAM_MISMATCH",
    REQ_BODY_DATA_MISSING = "VALIDATION:REQ_BODY_DATA_MISSING",
    VALIDATION_TOKEN_MALFORMED = "VALIDATION:VALIDATION_TOKEN_MALFORMED",

    // Authorization
    PASSPORT_UNAUTH = "AUTH:CREDENTIALS_INVALID",
    PASSPORT_FAILED = "AUTH:PASSPORT_FAILED",
    USER_ALREADY_LOGGED_OUT = "AUTH:USER_LOGGED_OUT",
    REQ_USER_MISSING = "Auth:USER_MISSING",
    TOKEN_MISSING = "AUTH:TOKEN_MISSING",
    TOKEN_MALFORMED = "AUTH:TOKEN_MALFORMED",
    TOKEN_REFRESH_FAILED = "AUTH:TOKEN_REFRESH_FAILED",
    TOKEN_INVALID = "AUTH:TOKEN_INVALID",
    AUTHORIZATION_HEADER_MISSING = "AUTH:AUTHORIZATION_HEADER_MISSING",
    ACCESS_TOKEN_EXPIRED = "AUTH:ACCESS_TOKEN_EXPIRED",
    REFRESH_TOKEN_EXPIRED = "AUTH:REFRESH_TOKEN_EXPIRED",
    REFRESH_TOKEN_MISSING = "AUTH:REFRESH_TOKEN_MISSING",
    REQ_USERID_NOT_FOUND = "AUTH:REQ_USER_MISSING",
    EMAIL_VERIFICATION_FAILED = "AUTH:EMAIL_VERIFICATION_FAILED",
    VERIFICATION_TOKEN_MALFORMED = "AUTH:VERIFICATION_TOKEN_MALFORMED",

    // NonBreaking (toast and forget)
    TOKEN_TO_DELETE_MALFORMED = "NON_BREAKING:TOKEN_TO_DELETE_MALFORMED",

    //Security
    INSECURE_CONNECTION = "NETWORK:INSECURE_CONNECTION",

    // DB Issues
    USER_NOT_FOUND = "DB:USER_NOT_FOUND",
    PUBLIC_RECIPES_MISSING = "DB:PUBLIC_RECIPES_MISSING",
    RESOURCE_NOT_FOUND = "DB:RESOURCE_NOT_FOUND",
    PASSWORD_CHANGE_FAILED = "DB:PASSWORD_CHANGE_FAILED",
    PWRESETDATA_DELETE_FAILED = "DB:PWRESETDATA_DELETE_FAILED",
    UPDATE_USER_FAILED = "DB:UPDATE_USER_FAILED",
    VERIFICATION_TOKEN_MISSING = "DB:VERIFICATION_TOKEN_MISSING",
    COLLECTION_NOT_FOUND = "DB:COLLECTION_NOT_FOUND",
    GET_DB_FAILED = "DB:GET_DB_FAILED",
    INIT_INDEXES_FAILED = "DB:INIT_INDEXES_FAILED",
    FIND_RESOURCE_FAILED = "DB:FIND_RESOURCE_FAILED",
    CREATE_RESOURCE_FAILED = "DB:CREATE_RESOURCE_FAILED",
    UPDATE_RESOURCE_FAILED = "DB:UPDATE_RESOURCE_FAILED",
    DELETE_RESOURCE_FAILED = "DB:DELETE_RESOURCE_FAILED",
    REQUEST_MALFORMED = "DB:REQUEST_MALFORMED",

    // Non Breaking 
    NON_BREAKING_DELETE_FAILED = "NON_BREAKING:DELETE_FAILED", 

    // PERMISSIONS
    RATE_LIMITED = "PERMISSION:RATE_LIMITED",
    RESOURCE_NOT_OWNED = "PERMISSION:RESOURCE_NOT_OWNED",
    PW_RESET_IN_PROGRESS = "PERMISSION:PW_RESET_IN_PROGRESS",
    USER_ROLE_FORBIDDEN = "PERMISSION:USER_ROLE_FORBIDDEN",
   
   // API issues
    ENDPOINT_NOT_FOUND = "API:ENDPOINT_NOT_FOUND",
    ENDPOINT_DEPRECATED = "API:ENDPOINT_DEPRECATED",

    // Third Party Services
    RESPONSE_DATA_MISSING = "SERVICE:CLOUDINARY:RESPONSE_DATA_MISSING",
    SENT_EMAIL_REJECTED = "SERVICE:EMAIL:EMAIL_REJECTED",
    EMAIL_SENDING_FAILED = "SERVICE:EMAIL:SEND_EMAIL_FAILED",
    EMAIL_OPERATION_FAILED = "SERVICE:EMAIL:VERIFICATION_FAILED",

    // Log Only
    LOGGING_FAILED = "LOG_ONLY:LOGGING_FAILED",

    // Config
    ENV_VAR_MISSING = "CONFIG:ENV_VAR_MISSING",

    // Unhandled Errors
    UNHANDLED_ERROR = "UNKNOWN:UNHANDLED_ERROR",
    UNHANDLED_REJECTION = "UNKNOWN:UNHANDLED_REJECTION",
}