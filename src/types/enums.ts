export enum Visibility {
    PUBLIC = 'public',
    PRIVATE = 'private'
}

/**
 * Token Types in case more tokens required in the future
 * - Example: `401:CREDENTIALS` → Show a login form.  
 */
export enum TokenTypes {
    PASSWORD_RESET = 'reset-password'
}

/**
 * Error codes follow the format: `HTTP_STATUS:SHORT_KEY`  
 * - Used by frontend to handle errors consistently.  
 * - Example: `401:CREDENTIALS` → Show a login form.  
 */
export enum ErrorCode {
    // Bad Request
    BAD_REQUEST_DEFAULT = "400:BAD_REQ",
    MULTER_FILE_FILTER_TYPES = "400:FILE_TYPES_INVALID",
    ZOD_VALIDATION_ERR = "400:ZOD_VALIDATION_ERR",
    FIELDNAME_NOT_ARRAY = "400:UPDATE_FIELDNAME_NOT_ARRAY",
    RESOURCE_ID_PARAM_MISSING = "400:MISSING_RESOURCE_ID_PARAM",
    PARAM_ID_NOT_EQUAL_TO_RESOURCE_ID = "400:PARAM_ID_NOT_EQUAL_TO_RESOURCE_ID",
    MISSING_REQUIRED_BODY_DATA = "400:MISSING_REQUIRED_BODY_DATA",
    VALIDATION_TOKEN_TYPE_INVALID = "400:VALIDATION_TOKEN _TYPE_INVALID",
    VALIDATION_TOKEN_USERID_INVALID = "400:VALIDATION_TOKEN_USERID_INVALID",
    MISSING_REQ_FILE = "400:MISSING_REQ_FILE",
    FILE_SIZE_TOO_LARGE = "400:FILE_SIZE_TOO_LARGE",

    // UnAuth
    UNAUTH_DEFAULT = "401:DEFAULT_UNAUTH",
    PASSPORT_UNAUTH = "401:BAD_CREDENTIALS",
    REQ_USER_MISSING = "401:REQ_USER_MISSING_RELOGIN",
    USER_SESSION_NOT_FOUND = "401:USER_SESSION_MISSING_RELOGIN",
    USER_NOT_AUTHETICATED = "401:USER_NOT_AUTHETICATED",


    // Forbidden
    FORBID_DEFAULT = "403:DEFAUL_FORBID",
    TOKEN_VERIFICATION_FAILED = "403:TOKEN_VERIFICATION_FAILED",
    PW_RESET_IN_PROGRESS = "403:PW_RESET_IN_PROGRESS",
    RESOURCE_NOT_USER_OWNED = "403:RESOURCE_NOT_USER_OWNED",
    CSRF_TOKEN_MISMATCH = "403:CSRF_TOKEN_MISMATCH",
    SESSION_CSRF_NOT_FOUND = "403:SESSION_CSRF_NOT_FOUND",
    CSRF_MISSING_IN_HEADERS = "403:CSRF_MISSING_IN_HEADERS",
    USER_ROLE_FORBIDDEN = "403:USER_ROLE_FORBIDDEN",

    // Not Found
    NOT_FOUND_DEFAULT = "404:DEFAUL_NOT_FOUND",
    ENDPOINT_NOT_FOUND = "404:ENDPOINT_NOT_FOUND",
    NO_PUBLIC_RECIPES_FOUND = "404:NO_PUBLIC_RECIPES_FOUND",
    NO_USER_WITH_EMAIL = "404:NO_USER_WITH_EMAIL",
    NO_USER_WITH_ID = "404:NO_USER_WITH_ID",
    NO_USER_FOUND = "404:NO_USER_FOUND",
    RESOURCE_TO_UPDATE_NOT_FOUND = "404:RESOURCE_TO_UPDATE_NOT_FOUND",
    RESOURCE_TO_DELETE_NOT_FOUND = "404:RESOURCE_TO_DELETE_NOT_FOUND",

    // Conflict
    CONFLICT_DEFAULT = "409:DEFAUL_CONFLICT",
    EMAIL_ALREADY_IN_USE = "409:EMAIL_ALREADY_IN_USE",
    UPDATE_RESOURCE_FAILED = "409:UPDATE_RESOURCE_FAILED",
    PW_RECENTLY_USED = "409:PW_RECENTLY_USED",

    // Internal Server
    SERVER_DEFAULT = "500:DEFAULT_SERVER",
    PASSPORT_FAILED = "500:PASSPORT_ERROR",
    SESSION_CREATE_FAILED = "500:SESSION_CREATE_FAILED",
    SESSION_REGEN_FAILED = "500:SESSION_REGEN_FAILED",
    MONGODB_COLLECTION_NOT_FOUND = "500:MONGODB_COLLECTION_NOT_FOUND",
    MONGODB_GET_DB_FAILED = "500:MONGODB_GET_DB_FAILED",
    MONGODB_INIT_INDICES = "500:MONGODB_INIT_INDEXES_FAILED",
    MONGODB_RESOURCE_FINDBYID_FAILED = "500:MONGODB_RESOURCE_FINDBYID_FAILED",
    MONGODB_RESOURCE_CREATE_FAILED = "500:MONGODB_RESOURCE_CREATE_FAILED",
    MONGODB_RESOURCE_UPDATE_FAILED = "500:MONGODB_RESOURCE_UPDATE_FAILED",
    MONGODB_CALL_FAILED = "500: MONGODB_CALL_FAILED_MISSING_VALUES",
    EXPECTED_DATA_MISSING = "500:EXPECTED_DATA_MISSING",
    EMAIL_SENDING_FAILED = "500:EMAIL_SENDING_FAILED",
    SENT_EMAIL_REJECTED = "500:SENT_EMAIL_REJECTED",
    UNSET_ENV_VARIABLE = "500:UNSENT_ENV_VARIABLE",
    OPERATION_FAILED = "500:OPERATION_FAILED",

    // Log Only
    LOG_ONLY_DEFAULT = "42:DEFAUL_LOG_ONLY",
    LOGGING_FAILED = "42:LOGGING_FAILED",
    NON_REQUIRED_DELETE_FAILED = "42:NON_REQUIRED_DELETE_FAILED",

    // Unknown
    UNKNONWN_DEFAULT = "??:DEFAUL_UNKNOWN",
    UNHANDLED_ERROR = "??:UNHANDLED_ERROR",
    UNHANDLED_NON_ERROR_REJECTION = "??:UNHANDLED_REJECTION",
    EXPECTED_RETURN_MISSING = ""
}